name: Electron Build & Release

on:
  push:
    tags:
      - 'v*.*.*'   # Тригер само при версии, напр. v1.0.0
  workflow_dispatch:  # Позволява ръчно стартиране

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        node: [20]

    steps:
      # 1. Checkout
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      # 3. Cache npm packages
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Clean install (със CI за по-надеждно)
      - name: Clean install
        run: |
          if [ -d "node_modules" ]; then rm -rf node_modules; fi
          if [ -f "package-lock.json" ]; then rm package-lock.json; fi
          npm ci

      # 5. Build Electron app
      - name: Build Electron App
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # 6. Zip macOS / Linux builds, ако има нужда (Windows вече exe)
      - name: Zip artifacts (macOS/Linux)
        if: runner.os != 'Windows'
        run: |
          zip -r build-${{ runner.os }}.zip dist/*

      # 7. Upload build artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: |
            dist/*
            build-${{ runner.os }}.zip
          if-no-files-found: warn
          compression-level: 0
